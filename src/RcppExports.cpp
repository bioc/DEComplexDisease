// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// degSpecificSigcpp
Rcpp::NumericVector degSpecificSigcpp(Rcpp::String x, Rcpp::IntegerVector seed, Rcpp::IntegerMatrix deg, Rcpp::NumericVector par);
RcppExport SEXP DEComplexDisease_degSpecificSigcpp(SEXP xSEXP, SEXP seedSEXP, SEXP degSEXP, SEXP parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type deg(degSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type par(parSEXP);
    rcpp_result_gen = Rcpp::wrap(degSpecificSigcpp(x, seed, deg, par));
    return rcpp_result_gen;
END_RCPP
}
// degSharedSigcpp
Rcpp::NumericVector degSharedSigcpp(Rcpp::String x, Rcpp::IntegerVector seed, Rcpp::IntegerMatrix deg, Rcpp::NumericVector par);
RcppExport SEXP DEComplexDisease_degSharedSigcpp(SEXP xSEXP, SEXP seedSEXP, SEXP degSEXP, SEXP parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type deg(degSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type par(parSEXP);
    rcpp_result_gen = Rcpp::wrap(degSharedSigcpp(x, seed, deg, par));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"DEComplexDisease_degSpecificSigcpp", (DL_FUNC) &DEComplexDisease_degSpecificSigcpp, 4},
    {"DEComplexDisease_degSharedSigcpp", (DL_FUNC) &DEComplexDisease_degSharedSigcpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_DEComplexDisease(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
